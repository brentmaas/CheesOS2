	.file	"memdump.c"
	.text
	.type	hex_digit, @function
hex_digit:
.LFB0:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$4, %esp
	movl	8(%ebp), %eax
	movb	%al, -4(%ebp)
	cmpb	$9, -4(%ebp)
	jbe	.L2
	movb	-4(%ebp), %al
	addl	$55, %eax
	jmp	.L3
.L2:
	movb	-4(%ebp), %al
	addl	$48, %eax
.L3:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE0:
	.size	hex_digit, .-hex_digit
	.section	.rodata
.LC0:
	.string	"\n"
	.text
	.globl	debug_memdump
	.type	debug_memdump, @function
debug_memdump:
.LFB1:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	movl	$0, -12(%ebp)
	jmp	.L5
.L7:
	movl	-12(%ebp), %eax
	andl	$15, %eax
	testl	%eax, %eax
	jne	.L6
	cmpl	$0, -12(%ebp)
	je	.L6
	subl	$12, %esp
	pushl	$.LC0
	call	vga_print
	addl	$16, %esp
.L6:
	movl	-16(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movb	(%eax), %al
	shrb	$4, %al
	andl	$255, %eax
	subl	$12, %esp
	pushl	%eax
	call	hex_digit
	addl	$16, %esp
	movb	%al, -20(%ebp)
	movl	-16(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movb	(%eax), %al
	andl	$255, %eax
	andl	$15, %eax
	subl	$12, %esp
	pushl	%eax
	call	hex_digit
	addl	$16, %esp
	movb	%al, -19(%ebp)
	movb	$32, -18(%ebp)
	movb	$0, -17(%ebp)
	subl	$12, %esp
	leal	-20(%ebp), %eax
	pushl	%eax
	call	vga_print
	addl	$16, %esp
	incl	-12(%ebp)
.L5:
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jb	.L7
	nop
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE1:
	.size	debug_memdump, .-debug_memdump
	.ident	"GCC: (GNU) 9.2.0"
