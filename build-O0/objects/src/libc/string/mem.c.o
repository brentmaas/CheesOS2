	.file	"mem.c"
	.text
	.globl	memset
	.type	memset, @function
memset:
.LFB0:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	$0, -4(%ebp)
	jmp	.L2
.L3:
	movl	8(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	12(%ebp), %edx
	movb	%dl, (%eax)
	incl	-4(%ebp)
.L2:
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jb	.L3
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE0:
	.size	memset, .-memset
	.globl	memcpy
	.type	memcpy, @function
memcpy:
.LFB1:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	$0, -4(%ebp)
	jmp	.L6
.L7:
	movl	12(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	8(%ebp), %ecx
	movl	-4(%ebp), %edx
	addl	%ecx, %edx
	movb	(%eax), %al
	movb	%al, (%edx)
	incl	-4(%ebp)
.L6:
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jb	.L7
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE1:
	.size	memcpy, .-memcpy
	.globl	memmove
	.type	memmove, @function
memmove:
.LFB2:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jnb	.L10
	movl	$0, -4(%ebp)
	jmp	.L11
.L12:
	movl	12(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movl	8(%ebp), %ecx
	movl	-4(%ebp), %edx
	addl	%ecx, %edx
	movb	(%eax), %al
	movb	%al, (%edx)
	incl	-4(%ebp)
.L11:
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jb	.L12
	jmp	.L13
.L10:
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jbe	.L13
	jmp	.L14
.L15:
	decl	16(%ebp)
	movl	12(%ebp), %edx
	movl	16(%ebp), %eax
	addl	%edx, %eax
	movl	8(%ebp), %ecx
	movl	16(%ebp), %edx
	addl	%ecx, %edx
	movb	(%eax), %al
	movb	%al, (%edx)
.L14:
	cmpl	$0, 16(%ebp)
	jne	.L15
.L13:
	movl	8(%ebp), %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE2:
	.size	memmove, .-memmove
	.globl	memcmp
	.type	memcmp, @function
memcmp:
.LFB3:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -12(%ebp)
	movl	$0, -4(%ebp)
	jmp	.L18
.L22:
	movl	-8(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movb	(%eax), %dl
	movl	-12(%ebp), %ecx
	movl	-4(%ebp), %eax
	addl	%ecx, %eax
	movb	(%eax), %al
	cmpb	%al, %dl
	jbe	.L19
	movl	$1, %eax
	jmp	.L20
.L19:
	movl	-8(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movb	(%eax), %dl
	movl	-12(%ebp), %ecx
	movl	-4(%ebp), %eax
	addl	%ecx, %eax
	movb	(%eax), %al
	cmpb	%al, %dl
	jnb	.L21
	movl	$-1, %eax
	jmp	.L20
.L21:
	incl	-4(%ebp)
.L18:
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jb	.L22
	movl	$0, %eax
.L20:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE3:
	.size	memcmp, .-memcmp
	.globl	memchr
	.type	memchr, @function
memchr:
.LFB4:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	movl	$0, -4(%ebp)
	jmp	.L24
.L27:
	movl	-8(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	movb	(%eax), %al
	andl	$255, %eax
	cmpl	%eax, 12(%ebp)
	jne	.L25
	movl	-8(%ebp), %edx
	movl	-4(%ebp), %eax
	addl	%edx, %eax
	jmp	.L26
.L25:
	incl	-4(%ebp)
.L24:
	movl	-4(%ebp), %eax
	cmpl	16(%ebp), %eax
	jb	.L27
	movl	$0, %eax
.L26:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE4:
	.size	memchr, .-memchr
	.ident	"GCC: (GNU) 9.2.0"
