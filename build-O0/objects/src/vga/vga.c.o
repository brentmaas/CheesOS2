	.file	"vga.c"
	.text
	.local	vga_row
	.comm	vga_row,4,4
	.local	vga_column
	.comm	vga_column,4,4
	.local	vga_current_color
	.comm	vga_current_color,1,1
	.section	.rodata
	.align 4
	.type	vga_buffer, @object
	.size	vga_buffer, 4
vga_buffer:
	.long	753664
	.text
	.type	vga_make_color, @function
vga_make_color:
.LFB0:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	movl	12(%ebp), %eax
	sall	$4, %eax
	movl	8(%ebp), %edx
	orl	%edx, %eax
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE0:
	.size	vga_make_color, .-vga_make_color
	.type	vga_make_char, @function
vga_make_char:
.LFB1:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, -4(%ebp)
	movb	%al, -8(%ebp)
	movsbw	-4(%ebp), %ax
	movb	-8(%ebp), %dl
	andl	$255, %edx
	sall	$8, %edx
	orl	%edx, %eax
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE1:
	.size	vga_make_char, .-vga_make_char
	.type	vga_write_char, @function
vga_write_char:
.LFB2:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	.cfi_offset 6, -12
	.cfi_offset 3, -16
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, -12(%ebp)
	movb	%al, -16(%ebp)
	cmpb	$10, -12(%ebp)
	jne	.L6
	movl	$0, vga_column
	movl	vga_row, %eax
	incl	%eax
	movl	%eax, vga_row
	movl	vga_row, %eax
	cmpl	$25, %eax
	jne	.L8
	subl	$12, %esp
	pushl	$1
	call	vga_scroll
	addl	$16, %esp
	jmp	.L8
.L6:
	movl	vga_column, %eax
	cmpl	$79, %eax
	ja	.L8
	movb	-16(%ebp), %al
	xorl	%ecx, %ecx
	movb	%al, %cl
	movsbl	-12(%ebp), %edx
	movl	$753664, %esi
	movl	vga_row, %ebx
	movl	%ebx, %eax
	sall	$2, %eax
	addl	%ebx, %eax
	sall	$4, %eax
	movl	%eax, %ebx
	movl	vga_column, %eax
	addl	%ebx, %eax
	addl	%eax, %eax
	leal	(%esi,%eax), %ebx
	subl	$8, %esp
	pushl	%ecx
	pushl	%edx
	call	vga_make_char
	addl	$16, %esp
	movw	%ax, (%ebx)
	movl	vga_column, %eax
	incl	%eax
	movl	%eax, vga_column
.L8:
	nop
	leal	-8(%ebp), %esp
	popl	%ebx
	.cfi_restore 3
	popl	%esi
	.cfi_restore 6
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE2:
	.size	vga_write_char, .-vga_write_char
	.globl	vga_init
	.type	vga_init, @function
vga_init:
.LFB3:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$16, %esp
	.cfi_offset 3, -12
	movl	$0, vga_row
	movl	$0, vga_column
	pushl	$0
	pushl	$15
	call	vga_make_color
	addl	$8, %esp
	movb	%al, vga_current_color
	movl	$0, -8(%ebp)
	jmp	.L10
.L11:
	movb	vga_current_color, %al
	andl	$255, %eax
	movl	$753664, %ecx
	movl	-8(%ebp), %edx
	addl	%edx, %edx
	leal	(%ecx,%edx), %ebx
	pushl	%eax
	pushl	$32
	call	vga_make_char
	addl	$8, %esp
	movw	%ax, (%ebx)
	incl	-8(%ebp)
.L10:
	cmpl	$1999, -8(%ebp)
	jbe	.L11
	nop
	nop
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE3:
	.size	vga_init, .-vga_init
	.globl	vga_color
	.type	vga_color, @function
vga_color:
.LFB4:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	vga_make_color
	addl	$8, %esp
	movb	%al, vga_current_color
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE4:
	.size	vga_color, .-vga_color
	.globl	vga_putchar
	.type	vga_putchar, @function
vga_putchar:
.LFB5:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	movl	8(%ebp), %eax
	movb	%al, -12(%ebp)
	movb	vga_current_color, %al
	xorl	%edx, %edx
	movb	%al, %dl
	movsbl	-12(%ebp), %eax
	subl	$8, %esp
	pushl	%edx
	pushl	%eax
	call	vga_write_char
	addl	$16, %esp
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE5:
	.size	vga_putchar, .-vga_putchar
	.globl	vga_write
	.type	vga_write, @function
vga_write:
.LFB6:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	movl	$0, -12(%ebp)
	jmp	.L15
.L16:
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	addl	%edx, %eax
	movb	(%eax), %al
	movsbl	%al, %eax
	subl	$12, %esp
	pushl	%eax
	call	vga_putchar
	addl	$16, %esp
	incl	-12(%ebp)
.L15:
	movl	-12(%ebp), %eax
	cmpl	12(%ebp), %eax
	jb	.L16
	nop
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE6:
	.size	vga_write, .-vga_write
	.globl	vga_print
	.type	vga_print, @function
vga_print:
.LFB7:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	subl	$12, %esp
	pushl	8(%ebp)
	call	strlen
	addl	$16, %esp
	subl	$8, %esp
	pushl	%eax
	pushl	8(%ebp)
	call	vga_write
	addl	$16, %esp
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE7:
	.size	vga_print, .-vga_print
	.globl	vga_scroll
	.type	vga_scroll, @function
vga_scroll:
.LFB8:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$16, %esp
	.cfi_offset 3, -12
	cmpl	$80, 8(%ebp)
	jbe	.L19
	movl	$80, 8(%ebp)
.L19:
	movl	$25, %eax
	subl	8(%ebp), %eax
	movl	%eax, -12(%ebp)
	movl	-12(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$4, %eax
	movl	%eax, -16(%ebp)
	movl	$0, -8(%ebp)
	jmp	.L20
.L21:
	movl	$753664, %ecx
	movl	8(%ebp), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$4, %eax
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	addl	%edx, %eax
	addl	%eax, %eax
	addl	%eax, %ecx
	movl	$753664, %edx
	movl	-8(%ebp), %eax
	addl	%eax, %eax
	addl	%eax, %edx
	movw	(%ecx), %ax
	movw	%ax, (%edx)
	incl	-8(%ebp)
.L20:
	movl	-8(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L21
	jmp	.L22
.L23:
	movb	vga_current_color, %al
	andl	$255, %eax
	movl	$753664, %ecx
	movl	-8(%ebp), %edx
	addl	%edx, %edx
	leal	(%ecx,%edx), %ebx
	pushl	%eax
	pushl	$32
	call	vga_make_char
	addl	$8, %esp
	movw	%ax, (%ebx)
	incl	-8(%ebp)
.L22:
	cmpl	$1999, -8(%ebp)
	jbe	.L23
	nop
	nop
	movl	-4(%ebp), %ebx
	leave
	.cfi_restore 5
	.cfi_restore 3
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE8:
	.size	vga_scroll, .-vga_scroll
	.ident	"GCC: (GNU) 9.2.0"
