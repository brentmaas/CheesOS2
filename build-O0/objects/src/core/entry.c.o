	.file	"entry.c"
	.text
	.section	.rodata
.LC0:
	.string	"Test1"
.LC1:
	.string	"Booted from "
.LC2:
	.string	"\n"
.LC3:
	.string	"Booted with command line "
.LC4:
	.string	"OPPERPYTHON\n"
.LC5:
	.string	"IS\n"
.LC6:
	.string	"GOED\n"
	.text
	.globl	kernel_main
	.type	kernel_main, @function
kernel_main:
.LFB0:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$8, %esp
	call	vga_init
	subl	$12, %esp
	pushl	$.LC0
	call	vga_print
	addl	$16, %esp
	call	gdt_init
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2
	subl	$12, %esp
	pushl	$.LC1
	call	vga_print
	addl	$16, %esp
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	subl	$12, %esp
	pushl	%eax
	call	vga_print
	addl	$16, %esp
	subl	$12, %esp
	pushl	$.LC2
	call	vga_print
	addl	$16, %esp
.L2:
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	andl	$4, %eax
	testl	%eax, %eax
	je	.L3
	subl	$12, %esp
	pushl	$.LC3
	call	vga_print
	addl	$16, %esp
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	subl	$12, %esp
	pushl	%eax
	call	vga_print
	addl	$16, %esp
	subl	$12, %esp
	pushl	$.LC2
	call	vga_print
	addl	$16, %esp
.L3:
	subl	$12, %esp
	pushl	$.LC4
	call	vga_print
	addl	$16, %esp
	subl	$8, %esp
	pushl	$4
	pushl	$2
	call	vga_color
	addl	$16, %esp
	subl	$12, %esp
	pushl	$.LC5
	call	vga_print
	addl	$16, %esp
	subl	$8, %esp
	pushl	$15
	pushl	$1
	call	vga_color
	addl	$16, %esp
	subl	$12, %esp
	pushl	$.LC6
	call	vga_print
	addl	$16, %esp
	nop
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE0:
	.size	kernel_main, .-kernel_main
	.ident	"GCC: (GNU) 9.2.0"
