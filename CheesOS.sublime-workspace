{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"interr",
				"interrupt_parameters"
			],
			[
				"IDT_PRI",
				"IDT_PRIVILEGE_3"
			],
			[
				"0xFFFFu",
				"0xFFFFu"
			],
			[
				"permu",
				"permutation_map\tsize_t * permutation_map"
			],
			[
				"run_fei",
				"run_feistel_detect\tvoid run_feistel_detect()"
			],
			[
				"round",
				"round_function\tFunc2 round_function"
			],
			[
				"roud",
				"round_function"
			],
			[
				"subrou",
				"subround_2\tint subround_2"
			],
			[
				"run_feistel_",
				"run_feistel_classic_test\tvoid run_feistel_classic_test()"
			],
			[
				"indepen",
				"independent_rows\tsize_t independent_rows"
			],
			[
				"run_fe",
				"run_feistel_detect\tvoid run_feistel_detect()"
			],
			[
				"inde",
				"independent_rows\tsize_t independent_rows"
			],
			[
				"in",
				"independent_rows\tsize_t independent_rows"
			],
			[
				"create_masked_to",
				"create_masked_toffoli_base"
			],
			[
				"create_nbit_toff",
				"create_nbit_toffoli_all_base\tvoid create_nbit_toffoli_all_base<size_t N, size_t Set>(quantum_reg *target)"
			],
			[
				"create_nb",
				"create_nbit_toffoli_all_nbit\tvoid create_nbit_toffoli_all_nbit<size_t N>(quantum_reg *target)"
			],
			[
				"down",
				"download_stream"
			],
			[
				"count_bu",
				"count_buffer_elements"
			],
			[
				"cudaM",
				"cudaMemcpyHostToDevice"
			],
			[
				"cudaMe",
				"cudaMemcpy"
			],
			[
				"blo",
				"block_remainder"
			],
			[
				"element",
				"elements_per_iter"
			],
			[
				"el",
				"elements_per_iter"
			],
			[
				"rema",
				"remaining_threads"
			],
			[
				"cudaMem",
				"cudaMemcpyHostToDevice"
			],
			[
				"remainin",
				"remaining_blocks"
			],
			[
				"elem",
				"elements_per_iter"
			],
			[
				"remain",
				"remaining_blocks"
			],
			[
				"remi",
				"remaining_blocks"
			],
			[
				"rem",
				"remaining_blocks"
			],
			[
				"suba",
				"subarray_size"
			],
			[
				"Nu",
				"numeric_limits\tnumeric_limits<typename _Tp>"
			],
			[
				"gene",
				"generate_start\tstd::chrono::high_resolution_clock::time_point generate_start"
			],
			[
				"genera",
				"generate_end\tstd::chrono::high_resolution_clock::time_point generate_end"
			],
			[
				"duratio",
				"duration_cast\ttypename enable_if<__is_duration<_ToDur>::value, _ToDur>::type duration_cast<typename _ToDur>(const duration<_Rep, _Period> &__d)"
			],
			[
				"dur",
				"duration_cast\ttypename enable_if<__is_duration<_ToDur>::value, _ToDur>::type duration_cast<typename _ToDur>(const duration<_Rep, _Period> &__d)"
			],
			[
				"radix_",
				"radix_sort_sub"
			],
			[
				"getNod",
				"getNode1\tsize_t getNode1() const"
			],
			[
				"row_e",
				"row_edge_nodes\tstd::vector<size_t> * row_edge_nodes"
			],
			[
				"get",
				"getEdgeWeight\tfloat getEdgeWeight() const"
			],
			[
				"getNo",
				"getNode1\tsize_t getNode1() const"
			],
			[
				"getN",
				"getNode2\tsize_t getNode2() const"
			],
			[
				"nod",
				"node2\tsize_t node2"
			],
			[
				"no",
				"node2\tsize_t node2"
			],
			[
				"node",
				"node1\tsize_t node1"
			],
			[
				"edg",
				"edge_weight\tfloat edge_weight"
			],
			[
				"current_de",
				"current_degree_start\tsize_t current_degree_start"
			],
			[
				"foreach_edge",
				"foreach_edge_min_degree\tvoid foreach_edge_min_degree(size_t node, T callback)"
			],
			[
				"row_ptr",
				"row_ptr_begin\tint [16384] row_ptr_begin"
			],
			[
				"defragm",
				"defragment_frequency\tint defragment_frequency"
			],
			[
				"defra",
				"defragment_frequency\tint defragment_frequency"
			],
			[
				"elapse",
				"elapsed_time"
			],
			[
				"ela",
				"elapsed_time"
			],
			[
				"orignal",
				"original_solution"
			],
			[
				"origina",
				"original_solution"
			],
			[
				"multip",
				"matrix_multiply"
			],
			[
				"temp",
				"temp_row_values"
			],
			[
				"row_pt",
				"row_ptr_end"
			],
			[
				"gc_",
				"gc_col_ind"
			],
			[
				"beg",
				"row_ptr_begin"
			],
			[
				"n_",
				"max_n_elements"
			],
			[
				"free_list_en",
				"free_list_entries-1"
			],
			[
				"free_list_e",
				"free_list_entries-1"
			],
			[
				"of",
				"offset"
			],
			[
				"free_li",
				"free_list_entries"
			],
			[
				"free_l",
				"free_list_entries"
			],
			[
				"swap",
				"swap_rows"
			],
			[
				"begin",
				"row_ptr_begin\tint [16384] row_ptr_begin"
			],
			[
				"temp_",
				"temp_col_ind"
			],
			[
				"PACKET_CHANCE",
				"PACKET_CHANCE_DROP"
			],
			[
				"requed",
				"requested_audio_quality\tuint8_t requested_audio_quality"
			],
			[
				"AUDIO_QUA",
				"AUDIO_QUALITY_MED\tenum audio_quality_type_ AUDIO_QUALITY_MED"
			],
			[
				"AUDIO_QAULiTY",
				"AUDIO_QUALITY_HIGH\tenum audio_quality_type_ AUDIO_QUALITY_HIGH"
			],
			[
				"AUDIO_Q",
				"AUDIO_QUALITY_BEST_CUTOFF\tAUDIO_QUALITY_BEST_CUTOFF"
			],
			[
				"qua",
				"quality_counter\tunsigned int quality_counter"
			],
			[
				"qual",
				"quality_counter"
			],
			[
				"callback",
				"request_callback\trequest_callback"
			],
			[
				"h",
				"header\tstruct server_header header"
			],
			[
				"client_",
				"client_send\tint client_send(struct client *client, struct client_packet *packet)"
			],
			[
				"client_recv_b",
				"client_recv_block_handler"
			],
			[
				"data",
				"data_size"
			],
			[
				"handle",
				"handle_get_audio_command"
			],
			[
				"dat",
				"data_size\tuint16_t data_size"
			],
			[
				"server",
				"server_run"
			],
			[
				"quali",
				"audio_quality_type\taudio_quality_type"
			],
			[
				"REG_RSP",
				"REG_RSP\tREG_RSP"
			],
			[
				"SymTab",
				"SymbolTable"
			],
			[
				"pres",
				"preserve_size\tsize_t preserve_size"
			],
			[
				"pre",
				"preserve_size\tsize_t preserve_size"
			],
			[
				"preserved_off",
				"preserved_offset\tsize_t preserved_offset"
			],
			[
				"prese",
				"preserved_offset\tsize_t preserved_offset"
			],
			[
				"GetStatme",
				"GetStatementCount\tunsigned int GetStatementCount()"
			],
			[
				"preser",
				"preserved_size\tsize_t preserved_size"
			],
			[
				"param",
				"param_call_usage\tstd::vector<IOperand *> param_call_usage"
			],
			[
				"GetO",
				"GetOperator\tIOperator GetOperator()"
			],
			[
				"GetOp",
				"GetOperator\tIOperator GetOperator()"
			],
			[
				"integ",
				"integer_register"
			],
			[
				"GetOper",
				"GetOperand1\tIOperand * GetOperand1()"
			],
			[
				"GetParameter",
				"GetParameterCount\tint GetParameterCount()"
			],
			[
				"IOP_U",
				"IOP_UNARY_MINUS_I\t__ioperator IOP_UNARY_MINUS_I"
			],
			[
				"Ge",
				"GetOperand1\tIOperand * GetOperand1()"
			],
			[
				"GetOP",
				"GetOperand1\tIOperand * GetOperand1()"
			],
			[
				"Get",
				"GetOperandType\tIOperandType GetOperandType()"
			],
			[
				"GetOpe",
				"GetOperand2\tIOperand * GetOperand2()"
			],
			[
				"IOP_RET",
				"IOP_RETURN_R\t__ioperator IOP_RETURN_R"
			],
			[
				"ST_",
				"ST_PARAMETER\t__symboltype ST_PARAMETER"
			],
			[
				"generate",
				"generatePreInstruction\tvoid generatePreInstruction(size_t)"
			],
			[
				"IOP_UNARY_MIN",
				"IOP_UNARY_MINUS_I"
			],
			[
				"GetOpera",
				"GetOperandType"
			],
			[
				"GetS",
				"GetSubprogramCount\tint GetSubprogramCount()"
			],
			[
				"assign",
				"assignOptimizePossible"
			],
			[
				"cmp_sta",
				"cmp_start_i\tIStatement * cmp_start_i"
			],
			[
				"end_of",
				"end_of_if_stmt\tIStatement * end_of_if_stmt"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"package control: i",
				"Package Control: Install Package"
			],
			[
				"ECC",
				"EasyClangComplete: Settings"
			],
			[
				"Snippet: ",
				"Snippet: Typedef"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"PackageRe",
				"PackageResourceViewer: Open Resource"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"EasyC",
				"EasyClangComplete: Settings"
			],
			[
				"Install ",
				"Package Control: Install Package"
			],
			[
				"Packag",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/marcel/Documents/Projecten/CheesOS2",
		"/home/marcel/Documents/Projecten/CheesOS2/include",
		"/home/marcel/Documents/Projecten/CheesOS2/linker",
		"/home/marcel/Documents/Projecten/CheesOS2/src"
	],
	"file_history":
	[
		"/home/marcel/Documents/Projecten/CheesOS2/src/core/bootstrap.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/src/interrupt/interrupt.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/src/libc/stdio/printf.c",
		"/home/marcel/Documents/Projecten/CheesOS2/src/interrupt/idt.c",
		"/home/marcel/Documents/Projecten/CheesOS2/include/interrupt/registers.h",
		"/home/marcel/Documents/Projecten/CheesOS2/include/interrupt/idt.h",
		"/home/marcel/Documents/Projecten/CheesOS2/src/libc/crtn.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/src/libc/crti.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/src/memory/gdt_load.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/Makefile",
		"/home/marcel/Documents/Projecten/CheesOS2/src/memory/gdt.c",
		"/home/marcel/Documents/Projecten/CheesOS2/src/core/entry.c",
		"/home/marcel/Documents/Projecten/CheesOS2/linker/kernel.ld",
		"/home/marcel/Documents/Projecten/CheesOS2/.gdbinit",
		"/home/marcel/Documents/Projecten/CheesOS2/src/core/multiboot.c",
		"/home/marcel/Documents/Projecten/CheesOS2/build-O0/objects/src/core/entry.c.o",
		"/home/marcel/Documents/Projecten/CheesOS2/build/objects/src/core/entry.c.o",
		"/home/marcel/Documents/Projecten/CheesOS2/include/core/multiboot.h",
		"/home/marcel/Documents/Projecten/CheesOS2/include/memory/gdt.h",
		"/home/marcel/Documents/Projecten/CheesOS2/include/debug/memdump.h",
		"/home/marcel/Documents/Projecten/CheesOS2/src/debug/memdump.c",
		"/home/marcel/Documents/Projecten/CheesOS2/linker/crtn.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/linker/crti.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/src/vga/vga.c",
		"/home/marcel/Documents/Projecten/CheesOS2/src/libc/string/strlen.c",
		"/home/marcel/Documents/Projecten/CheesOS2/include/libc/string.h",
		"/home/marcel/Documents/Projecten/CheesOS2/include/vga/vga.h",
		"/home/marcel/Documents/Projecten/CheesOS2/core/multiboot.h",
		"/home/marcel/Documents/Universiteit/M1/QA/project/src/main.cpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/include/toffoli.hpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/include/matrix.hpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/include/feistel.hpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/src/matrix.cpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/include/simon.hpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/Makefile",
		"/home/marcel/Documents/Universiteit/M1/QA/project/include/quantum.hpp",
		"/home/marcel/Documents/Universiteit/M1/QA/project/src/simon.cpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/src/mpi-main.cpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/src/sort/gpu.cu",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/Makefile",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/include/sort.hpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/include/gpu.hpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/src/sort/gpu.nc",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/src/sort/radix.cpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/src/sort/counting.cpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/debug_out.txt",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg3/hpc3/debug_out2.txt",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg2/Makefile",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg2/src/matrix.hpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg2/src/matrix.cpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg2/test/minimal.mtx",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg2/src/main.cpp",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg1/skeleton/Makefile",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg1/skeleton/lu.cc",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg1/skeleton/out.txt",
		"/home/marcel/Documents/Universiteit/M1/HPC1/asg1/skeleton/lu.c",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/cpp.cpp",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/Makefile",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/sse.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/include/util/core.h",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/include/core/sse.h",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/sse.c",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/init.c",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/include/sse/sse.h",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/cpp.c",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/include/core/cpp.h",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/link/crti.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/link/crtn.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/cpp.asm",
		"/home/marcel/.config/sublime-text-3/Packages/User/NoCompile.sublime-build",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/paging/paging.c",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/paging/paging.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/include/paging/paging.h",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/src/core/init.asm",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/core/init.c",
		"/home/marcel/Documents/Projecten/CheesOS2/kernel/core/init.asm",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/audio/compressor.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/audio/compressor.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/audio/quality.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/network/command.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/network/packet.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/network/status.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/network/server.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/network/server.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/args.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/command.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/command.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/config.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/main.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/argparseutil.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/argparseutil.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/wave.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/checksum.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/config.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/wave.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/client/main.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/client/network/client.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/client/network/client.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/Makefile",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/Hisscord.sublime-project",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/client/config.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/doc/quality.txt",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/audio/compressor.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/server/audio/compressor.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/udp.h",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/src/common/udp.c",
		"/home/marcel/Documents/Universiteit/3/Netwerken/2/Hisscord/README.md",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/main.cpp",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/hwexcept/hwexcept_raw.asm",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/hwexcept/hwexcept.hpp",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/hwexcept/hwexcept.cpp",
		"/home/marcel/Documents/Projecten/SegfaultExcept/Makefile",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/main.S",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/hwexcept/hwexcept.S",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/hwexcept/hwexcept.asm",
		"/home/marcel/Documents/Projecten/SegfaultExcept/src/Makefile",
		"/home/marcel/Documents/Projecten/SegfaultExcept/hwexcept.sublime-workspace",
		"/home/marcel/Documents/Projecten/SegfaultExcept/hwexcept/hwexcept.asm",
		"/home/marcel/Documents/Projecten/SegfaultExcept/hwexcept/hwexcept.cpp",
		"/home/marcel/Documents/Projecten/SegfaultExcept/hwexcept/hwexcept.hpp",
		"/home/marcel/.config/sublime-text-3/Packages/C++/C++ Single File.sublime-build",
		"/home/marcel/Documents/Projecten/SegfaultExcept/hwexcept.sublime-project",
		"/home/marcel/Documents/Projecten/SegfaultExcept/main.cpp",
		"/home/marcel/Documents/Universiteit/3/CoCo/assignment4/storagemanager.cc",
		"/home/marcel/Documents/Universiteit/3/CoCo/assignment4/storagemanager.h",
		"/home/marcel/Documents/Universiteit/3/CoCo/assignment4/CodeGenerator.h",
		"/home/marcel/Documents/Universiteit/3/CoCo/assignment4/CodeGenerator.cc",
		"/home/marcel/Documents/Universiteit/3/CoCo/assignment4/ICGenerator.cc"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"size_t",
			"this->graph",
			"graph",
			"row_sizes",
			"getc"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"unsigned long long"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 154.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 120.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "CheesOS.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
